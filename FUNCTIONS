. $GRIMOIRE/libaccount
. $GRIMOIRE/libgcc
. $GRIMOIRE/config_query_multi.function

if is_depends_enabled $SPELL python;then
  VV=`installed_version python | cut -c-3` &&
  PYTHON2=/usr/bin/python${VV}
  export PYTHON=$PYTHON2
fi

if is_depends_enabled $SPELL python3;then
  VV=`installed_version python3 | cut -c-3` &&
  PYTHON3=/usr/bin/python${VV}m
  export PYTHON=$PYTHON3
fi

QT5DIR=$INSTALL_ROOT/opt/qt5
qt5_build() {
  export PKG_CONFIG_PATH="$QT5DIR/lib/pkgconfig"
  cd $SOURCE_DIRECTORY &&
  QMAKEPATH="$QT5DIR/bin"
# in some cases, we set a symlink to python in the source directory
  PATH="$QMAKEPATH:$SOURCE_DIRECTORY:$PATH"
  qmake PREFIX=$QT5DIR $OPTS *.pro &&
  make
}


#---------------------------------------------------------------------
## This function automatically fixes any known bad paths
#---------------------------------------------------------------------
function default_grimoire_post_install () {
  real_default_sorcery_post_install && # currently a no-op
  if [[ $STAGED_INSTALL == off ]]; then
    return 0
  fi &&
  pushd TRANSL &> /dev/null &&
  if [[ -d usr/man ]]; then
    echo Fixing bad install path: /usr/man &&
    mv -v usr/man usr/share
  fi &&
  if [[ -d usr/info ]]; then
    echo Fixing bad install path: /usr/info &&
    mv -v usr/info usr/share
  fi &&
  if [[ -d usr/local/man ]]; then
    echo Fixing bad install path: /usr/local/man &&
    mv -v usr/local/man usr/share
  fi &&
  if [[ -d usr/local/info ]]; then
    echo Fixing bad install path: /usr/local/info &&
    mv -v usr/local/info usr/share
  fi &&
  popd &> /dev/null
}

#---------------------------------------------------------------------
## Replaces sorcerys default_pre_build with a custom version using
## the invoke_gcc function from libgcc #10641
#---------------------------------------------------------------------
function default_pre_build () {
  invoke_gcc  &&
  real_default_pre_build
}

#---------------------------------------------------------------------
## Sets the current script to run only one make job
#---------------------------------------------------------------------

function make_single ()
{
  JOBS_PER_HOST=0  &&
     MAKE_NJOBS=1
}

#---------------------------------------------------------------------
## Re-enables the normal Sorcery make (cancels single_make)
#---------------------------------------------------------------------

function make_normal ()
{
  source $COMPILE_CONFIG
}


#-------------------------------------------------------------------------
## Default build for Python2 spell.
#-------------------------------------------------------------------------
function default_build_python() {
  $PYTHON2 setup.py build "$@"
}

#-------------------------------------------------------------------------
## Default build for Python 3 spell.
#-------------------------------------------------------------------------
function default_build_python3() {
  $PYTHON3 setup.py build "$@"
}

#-------------------------------------------------------------------------
## Default install for Python spell.
#-------------------------------------------------------------------------
function default_install_python() {
  $PYTHON2 setup.py install --root "$INSTALL_ROOT/" "$@"
}

#-------------------------------------------------------------------------
## Default install for Python 3 spell.
#-------------------------------------------------------------------------
function default_install_python3() {
  $PYTHON3 setup.py install --root "$INSTALL_ROOT/" "$@"
}
# spells in several  sections now need cmake or qt4
cmake_build() {
  cd $SOURCE_DIRECTORY  &&
  mkdir -p build        &&
  cd build              &&
  prepare_cmake_flags   &&
  cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_ROOT/usr -DSYSCONFDIR=$INSTALL_ROOT/etc $OPTS ../  &&
  make
}

#---
## Select SCM branch. If no parameter is given, it assumes a single scm branch.
##
## Saves selected branch in ${SPELL}_BRANCH, and auto-update setting on
## ${SPELL}_AUTOUPDATE.
##
## Usage:
##   . ${GRIMOIRE}/FUNCTIONS &&
##   prepare_select_branch [branch] ...
#---
function prepare_select_branch() {
  local spell=$(get_up_spell_name) &&
  local branch="$spell"_BRANCH &&

  if [[ $# > 1 ]]; then
    config_query_list $branch "Select one of the available branches:" "$@"
  else
    eval $branch=\""${1:-scm}"\"
  fi &&

  if [[ "${!branch/-*}" = scm ]]; then
    config_query "$spell"_AUTOUPDATE 'Automatically update on every system update?' n
  fi
}

#---
## Get uppercase spell name with _ instead of -
#---
function get_up_spell_name() {
  echo ${1:-$SPELL} | tr "a-z-" "A-Z_"
}

# Move SPELL_OPTS to OPTS
# basicly generic OPTS="$SPELL_OPTS $OPTS"
function prepare_opts() {
  # this is here so that config_query_option can be used without
  # extra junk
  local up_spell_name=$(get_up_spell_name)     &&
  local tempopts="${up_spell_name}_OPTS"                  &&
  OPTS="${!tempopts} $OPTS"
}

#---
## Default configure
#---

function default_build_configure() {
  prepare_opts                                            &&
  OPTS="$OPTS --build=${BUILD}"                           &&
  #If these switches are used, they _may_ stop distcc and ccache from working
  # for some spells (bug 3798)
  #  We could write wrappers for all of the possible binaries
  [[ $CROSS_INSTALL == on ]] && OPTS="$OPTS --host=${HOST}"

  ./configure --prefix=${INSTALL_ROOT}/usr                 \
          --sysconfdir=${INSTALL_ROOT}/etc                 \
       --localstatedir=${INSTALL_ROOT}/var                 \
              --mandir=${INSTALL_ROOT}/usr/share/man       \
             --infodir=${INSTALL_ROOT}/usr/share/info      \
                       $OPTS
}

#---
## Default make
#---

function default_build_make(){
  make
}

#---
## Compare if one version is less than another (uses sort from coreutils)
#---
function is_version_less() {
  [ ! $(echo -e "$1\n$2" | sort --version-sort | head -1) = "$2" ]
}

#---
## Simple version check with force depends
## @params $1 - the spell to check the version of
## @params $2 - the simple version to check against
##              (if proper is 2.1.0 then this is 210)
## @params $3 - how many digits to compare against from left to right
##              defaults to 99 digits
#---
function simple_version_check_force_depends(){
if spell_ok $1 &&
   [[ $(installed_version $1|sed -e 's:^0\.::' -e 's:\.::g' | cut -c-${3:=99}) -lt $2 ]]
  then
    force_depends $1
fi
}

. $GRIMOIRE/glselect.function
. $GRIMOIRE/bzr_download.function
. $GRIMOIRE/hg_download.function
